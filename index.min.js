const express=require("express"),fetch=require("node-fetch"),app=express(),cache=new Map,cacheTtl=36e5;function getType(e,t){const a=e.split(".").pop().toLowerCase();if(["html","htm"].includes(a))return t?"text/html":"text/plain";return{js:"application/javascript",mjs:"application/javascript",json:"application/json",css:"text/css",xml:"application/xml",txt:"text/plain",text:"text/plain",md:"text/markdown",markdown:"text/markdown",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif",svg:"image/svg+xml",webp:"image/webp",ico:"image/x-icon",bmp:"image/bmp",tif:"image/tiff",tiff:"image/tiff",mp4:"video/mp4",webm:"video/webm",ogg:"video/ogg",mp3:"audio/mpeg",wav:"audio/wav",aac:"audio/aac",pdf:"application/pdf",zip:"application/zip",gz:"application/gzip",tar:"application/x-tar",rar:"application/x-rar-compressed","7z":"application/x-7z-compressed",woff:"font/woff",woff2:"font/woff2",ttf:"font/ttf",otf:"font/otf",eot:"application/vnd.ms-fontobject",wasm:"application/wasm",webmanifest:"application/manifest+json",rss:"application/rss+xml",atom:"application/atom+xml"}[a]||"application/octet-stream"}async function handleGithub(e,t){const{user:a,repoAndBranchOrTag:o}=e.params,n=e.params[0],[s,r="main"]=o.split("@"),i=`https://raw.githubusercontent.com/${a}/${s}/${r}/${n}`;if(console.log(`fetching github: ${i}`),setCors(t),"OPTIONS"===e.method)return t.sendStatus(200);const p=`github-${i}`,c=cache.get(p);if(c&&Date.now()-c.timestamp<36e5)return console.log(`from cache: ${i}`),t.setHeader("Content-Type",c.type),t.setHeader("Cache-Control","public, max-age=3600, immutable"),t.send(c.data);try{const a=await fetch(i);if(!a.ok)return console.error(`github error: ${a.status}`),t.status(a.status).send(`cannot fetch ${n}`);const o=getType(n,"display"in e.query),s=await a.buffer();cache.set(p,{data:s,type:o,timestamp:Date.now()}),t.setHeader("Content-Type",o),t.setHeader("Cache-Control","public, max-age=31536000, immutable"),t.send(s)}catch(e){console.error("github fetch error:",e),t.status(500).send("server error")}}async function handleNpm(e,t){const{packageName:a,packageVersion:o}=e.params,n=e.params[0],s=`https://unpkg.com/${a}@${o||"latest"}/${n}`;if(console.log(`fetching npm: ${s}`),setCors(t),"OPTIONS"===e.method)return t.sendStatus(200);const r=`npm-${s}`,i=cache.get(r);if(i&&Date.now()-i.timestamp<36e5)return console.log(`from cache: ${s}`),t.setHeader("Content-Type",i.type),t.setHeader("Cache-Control","public, max-age=3600, immutable"),t.send(i.data);try{const o=await fetch(s);if(!o.ok)return console.error(`npm error: ${o.status}`),t.status(o.status).send(`cannot fetch ${a}/${n}`);const i=o.headers.get("Content-Type")||getType(n,"display"in e.query),p=await o.buffer();cache.set(r,{data:p,type:i,timestamp:Date.now()}),t.setHeader("Content-Type",i),t.setHeader("Cache-Control","public, max-age=31536000, immutable"),t.send(p)}catch(e){console.error("npm fetch error:",e),t.status(500).send("server error")}}function setCors(e){e.setHeader("Access-Control-Allow-Origin","*"),e.setHeader("Access-Control-Allow-Methods","GET, OPTIONS"),e.setHeader("Access-Control-Allow-Headers","Content-Type, Authorization")}if(app.get("/github/:user/:repoAndBranchOrTag/*",handleGithub),app.get("/npm/:packageName@:packageVersion/*",handleNpm),app.get("/npm/:packageName/*",((e,t)=>{e.params.packageVersion="",handleNpm(e,t)})),require.main===module){const e=process.env.PORT||3e3;app.listen(e,(()=>{console.log(`listening on http://localhost:${e}`)}))}
